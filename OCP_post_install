##################################################
1. Update NTP and timezone
##################################################

for i in `oc get nodes | grep -iv name | awk '{print $1}'`; do ssh core@$i "sudo timedatectl set-timezone Asia/Bangkok"; done 
for i in `oc get nodes | grep -iv name | awk '{print $1}'`; do echo $i; ssh core@$i "sudo timedatectl"; done 

cat /etc/chrony.conf | python3 -c "import sys, urllib.parse; print(urllib.parse.quote(''.join(sys.stdin.readlines())))"

vi 50-master-chrony
apiVersion: machineconfiguration.openshift.io/v1
kind: MachineConfig
metadata:
  labels:
    machineconfiguration.openshift.io/role: master
  name: 50-master-chrony
spec:
  config:
    ignition:
      version: 2.2.0
    storage:
      files:
      - contents:
          source: data:,%23%20Use%20public%23%20Enable%20kernel%20synchronization%20
        filesystem: root
        mode: 0644
        path: /etc/chrony.conf

vi 50-worker-chrony
apiVersion: machineconfiguration.openshift.io/v1
kind: MachineConfig
metadata:
  labels:
    machineconfiguration.openshift.io/role: worker
  name: 50-master-chrony
spec:
  config:
    ignition:
      version: 2.2.0
    storage:
      files:
      - contents:
          source: data:,%23%20Use%20public%20servers%20from%20the%20pool.ntp.org%20
        filesystem: root
        mode: 0644
        path: /etc/chrony.conf

oc create -f 50-master-chrony
oc create -f 50-worker-chrony
watch oc get mcp
for i in `oc get nodes | grep -iv name | awk '{print $1}'`; do echo $i; ssh core@$i "sudo chronyc sources"; done 

##################################################
2.Create node label
##################################################

oc label node <node> node-role.kubernetes.io/infra-router=""
oc label node <node> node-role.kubernetes.io/infra-monitoring=""

oc label node <node> node-role.kubernetes.io/worker-

oc get nodes --show-labels

##################################################
3. Create infra machineconfigpool
##################################################

cat <<EOF | oc apply -f -
apiVersion: machineconfiguration.openshift.io/v1
kind: MachineConfigPool
metadata: 
  name: infra
spec:
  machineConfigSelector:
    matchExpressions:
      - {key: machineconfiguration.openshift.io/role, operator: In, values: 
[worker,infra]}
  nodeSelector:
    matchLabels:
      node-role.kubernetes.io/infra-router: ""
  paused: false
EOF


cat <<EOF | oc apply -f -
apiVersion: machineconfiguration.openshift.io/v1
kind: MachineConfigPool
metadata: 
  name: monitoring
spec:
  machineConfigSelector:
    matchExpressions:
      - {key: machineconfiguration.openshift.io/role, operator: In, values: 
[worker,monitoring]}
  nodeSelector:
    matchLabels:
      node-role.kubernetes.io/infra-monitoring: ""
  paused: false
EOF

oc get mcp

##################################################
4. Config ImageRegistry Operator to managed state
##################################################

oc edit configs.imageregistry.operator.openshift.io

managementState: Removed -> Managed

  storage:
    emptyDir: {}

##################################################
5. taint node and torelation
##################################################

oc adm taint node d2d-ocp4infra-a01.dmp.true.th d2d-ocp4infra-a02.dmp.true.th infra-router=reserved:NoSchedule
oc adm taint node d2d-ocp4logmon-a01.dmp.true.th d2d-ocp4logmon-a02.dmp.true.th d2d-ocp4logmon-a03.dmp.true.th infra-monitoring=reserved:NoSchedule

##################################################
6. Move OCP Services to Infra and Monitoring nodes
##################################################

move router pods

oc patch ingresscontroller/default --type=merge -n openshift-ingress-operator -p '{"spec": {"nodePlacement":{"nodeSelector":{"matchLabels":{"node-role.kubernetes.io/infra-router": ""}},"tolerations": [{"effect":"NoSchedule","key": "infra-router","value": "reserved"}]}}}'
watch "oc -n openshift-ingress get pod -o wide"

move image-registry pod

oc -n openshift-image-registry patch configs.imageregistry.operator.openshift.io cluster --type=merge --patch='{"spec":{"nodeSelector": {"node-role.kubernetes.io/infra-monitoring":""},"tolerations": [{"effect":"NoSchedule","key": "infra-monitoring","value": "reserved"}]}}'
watch oc -n openshift-image-registry get pod -o wide | grep '^image-registry-'







